<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Advance JS</title>
        <!----bootstrap cdn-->
        <link rel="stylesheet"
            href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
            integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"
            crossorigin="anonymous">
    </head>
    <body>
         <div class="container">
            <h1 class="text-center mb-5">ADVANCE JS</h1>
            <div class="row">
                <div class="col-sm-6 col-md-4  mb-5  border-bottom">
                    <h2>JavaScript Engine and Runtime</h2>
                    <ul>
                        <li>Understanding the JavaScript engine (V8,
                            SpiderMonkey)</li>
                        <li>JavaScript runtime environments (Browser,
                            Node.js)</li>
                        <li>Event loop and concurrency model</li>
                        <li>Call stack and task queues (macro-tasks,
                            micro-tasks)</li>
                    </ul>
                </div>

                <div class="col-sm-6 col-md-4  mb-5  border-bottom">
                    <h2>Asynchronous JavaScript</h2>
                    <ul>
                        <li>Callbacks, Promises, and Async/Await</li>
                        <li>Error handling in asynchronous code</li>
                        <li>Working with async iterators and generators</li>
                        <li>Understanding non-blocking I/O</li>
                    </ul>
                </div>

                <div class="col-sm-6 col-md-4  mb-5  border-bottom">
                    <h2>JavaScript Design Patterns</h2>
                    <ul>
                        <li>Creational patterns (Singleton, Factory,
                            Constructor)</li>
                        <li>Structural patterns (Module, Decorator, Proxy)</li>
                        <li>Behavioral patterns (Observer, Strategy,
                            Command)</li>
                    </ul>
                </div>

                <div class="col-sm-6 col-md-4  mb-5  border-bottom">
                    <h2>JavaScript Closures and Scoping</h2>
                    <ul>
                        <li>Lexical scoping</li>
                        <li>Closures and their applications</li>
                        <li>IIFE (Immediately Invoked Function Expressions)</li>
                        <li>Module patterns using closures</li>
                    </ul>
                </div>

                <div class="col-sm-6 col-md-4  mb-5  border-bottom">
                    <h2>Advanced Functions</h2>
                    <ul>
                        <li>Higher-order functions</li>
                        <li>Function currying</li>
                        <li>Partial application</li>
                        <li>Memoization</li>
                        <li>Function composition and pipelining</li>
                    </ul>
                </div>

                <div class="col-sm-6 col-md-4  mb-5  border-bottom">
                    <h2>Prototypes and Inheritance</h2>
                    <ul>
                        <li>Understanding prototypes and prototype chain</li>
                        <li>Classical vs. prototypal inheritance</li>
                        <li>ES6 classes and inheritance</li>
                        <li>Mixins and object composition</li>
                    </ul>
                </div>

                <div class="col-sm-6 col-md-4  mb-5  border-bottom">
                    <h2>JavaScript Modules</h2>
                    <ul>
                        <li>ES6 Modules (import, export)</li>
                        <li>CommonJS and AMD modules</li>
                        <li>Dynamic imports and module bundling</li>
                        <li>Module scope and encapsulation</li>
                    </ul>
                </div>

                <div class="col-sm-6 col-md-4  mb-5  border-bottom">
                    <h2>Error Handling and Debugging</h2>
                    <ul>
                        <li>Try...catch...finally</li>
                        <li>Custom error types and throwing errors</li>
                        <li>Error propagation</li>
                        <li>Debugging techniques (breakpoints, console, source
                            maps)</li>
                    </ul>
                </div>

                <div class="col-sm-6 col-md-4  mb-5  border-bottom">
                    <h2>Memory Management</h2>
                    <ul>
                        <li>Understanding garbage collection</li>
                        <li>Memory leaks and how to avoid them</li>
                        <li>Performance optimization techniques</li>
                        <li>Using the JavaScript Memory Profiler</li>
                    </ul>
                </div>

                <div class="col-sm-6 col-md-4  mb-5  border-bottom">
                    <h2>Event Handling and Event Propagation</h2>
                    <ul>
                        <li>Event bubbling, capturing, and delegation</li>
                        <li>Custom events and EventEmitter in Node.js</li>
                        <li>Debouncing and throttling</li>
                    </ul>
                </div>

                <div class="col-sm-6 col-md-4  mb-5  border-bottom">
                    <h2>Advanced Array and Object Manipulation</h2>
                    <ul>
                        <li>Array methods (map, reduce, filter, etc.)</li>
                        <li>Spread operator, destructuring, and rest
                            parameters</li>
                        <li>Deep vs. shallow copies</li>
                        <li>Object and array destructuring</li>
                    </ul>
                </div>

                <div class="col-sm-6 col-md-4  mb-5  border-bottom">
                    <h2>Regular Expressions (Regex)</h2>
                    <ul>
                        <li>Syntax and patterns</li>
                        <li>Matching, capturing, and replacing strings</li>
                        <li>Advanced regex features (lookaheads,
                            lookbehinds)</li>
                    </ul>
                </div>

                <div class="col-sm-6 col-md-4  mb-5  border-bottom">
                    <h2>Advanced DOM Manipulation</h2>
                    <ul>
                        <li>Virtual DOM concepts</li>
                        <li>Shadow DOM and Web Components</li>
                        <li>Advanced selectors and event handling in the
                            DOM</li>
                        <li>Performance optimization in DOM manipulation</li>
                    </ul>
                </div>

                <div class="col-sm-6 col-md-4  mb-5  border-bottom">
                    <h2>Promises and Fetch API</h2>
                    <ul>
                        <li>Promises chaining and composition</li>
                        <li>Using the Fetch API for network requests</li>
                        <li>Handling streams and blobs</li>
                    </ul>
                </div>

                <div class="col-sm-6 col-md-4  mb-5  border-bottom">
                    <h2>Web Performance Optimization</h2>
                    <ul>
                        <li>Lazy loading and code splitting</li>
                        <li>Web workers and off-main-thread scripting</li>
                        <li>Using the Performance API</li>
                    </ul>
                </div>

                <div class="col-sm-6 col-md-4  mb-5  border-bottom">
                    <h2>Security in JavaScript</h2>
                    <ul>
                        <li>XSS (Cross-Site Scripting) prevention</li>
                        <li>CSRF (Cross-Site Request Forgery) protection</li>
                        <li>Content Security Policy (CSP)</li>
                        <li>Securing JavaScript code and sensitive data</li>
                    </ul>
                </div>

                <div class="col-sm-6 col-md-4  mb-5  border-bottom">
                    <h2>TypeScript</h2>
                    <ul>
                        <li>Adding types to JavaScript with TypeScript</li>
                        <li>Interfaces, types, and generics</li>
                        <li>Type guards and advanced type manipulation</li>
                    </ul>
                </div>

                <div class="col-sm-6 col-md-4  mb-5  border-bottom">
                    <h2>Advanced ES6+ Features</h2>
                    <ul>
                        <li>Generators and iterators</li>
                        <li>Symbols and well-known symbols</li>
                        <li>Proxy and Reflect API</li>
                        <li>Template literals and tagged templates</li>
                    </ul>
                </div>

                <div class="col-sm-6 col-md-4  mb-5  border-bottom">
                    <h2>Meta-programming</h2>
                    <ul>
                        <li>Using eval() and Function() constructors</li>
                        <li>Reflection using the Reflect API</li>
                        <li>Proxies for meta-programming</li>
                    </ul>
                </div>

                <div class="col-sm-6 col-md-4  mb-5  border-bottom">
                    <h2>JavaScript with Web APIs</h2>
                    <ul>
                        <li>Working with WebSockets and WebRTC</li>
                        <li>Service Workers and Progressive Web Apps (PWAs)</li>
                        <li>Geolocation, Notifications, and other browser
                            APIs</li>
                        <li>IndexedDB and LocalStorage</li>
                    </ul>
                </div>

                <div class="col-sm-6 col-md-4  mb-5  border-bottom">
                    <h2>Tooling and Build Systems</h2>
                    <ul>
                        <li>Using npm and Yarn</li>
                        <li>Webpack, Babel, and Rollup</li>
                        <li>Linting, formatting, and code quality tools (ESLint,
                            Prettier)</li>
                    </ul>
                </div>

                <div class="col-sm-6 col-md-4  mb-5  border-bottom">
                    <h2>Testing JavaScript Applications</h2>
                    <ul>
                        <li>Unit testing with frameworks like Jest, Mocha</li>
                        <li>End-to-end testing with Cypress, Puppeteer</li>
                        <li>Test-driven development (TDD) and behavior-driven
                            development (BDD)</li>
                    </ul>
                </div>

                <div class="col-sm-6 col-md-4  mb-5  border-bottom">
                    <h2>Performance and Optimization Techniques</h2>
                    <ul>
                        <li>Code splitting and lazy loading</li>
                        <li>Web workers and off-main-thread processing</li>
                        <li>Memory leaks and performance profiling</li>
                    </ul>
                </div>

            </div>
        </div>
<script src="js/closure.js"></script>
    </body>
</html>